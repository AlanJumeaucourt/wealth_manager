{
    "components": {
        "schemas": {
            "Account": {
                "properties": {
                    "balance": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "bank_id": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "asset",
                            "investment",
                            "income",
                            "expense",
                            "checking",
                            "savings"
                        ],
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "bank_id",
                    "name",
                    "type",
                    "user_id"
                ],
                "type": "object"
            },
            "AccountAsset": {
                "properties": {
                    "account_id": {
                        "type": "integer"
                    },
                    "asset_id": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "account_id",
                    "asset_id",
                    "quantity",
                    "user_id"
                ],
                "type": "object"
            },
            "Asset": {
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "symbol": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "symbol",
                    "user_id"
                ],
                "type": "object"
            },
            "Bank": {
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "website": {
                        "nullable": true,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "user_id"
                ],
                "type": "object"
            },
            "Budget": {
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "category": {
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "end_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "start_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "category",
                    "end_date",
                    "name",
                    "start_date",
                    "user_id"
                ],
                "type": "object"
            },
            "BudgetSubcategory": {
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "subcategory": {
                        "type": "string"
                    },
                    "transactions_related": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "amount",
                    "subcategory",
                    "transactions_related"
                ],
                "type": "object"
            },
            "BudgetSummary": {
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "category": {
                        "type": "string"
                    },
                    "subcategories": {
                        "items": {
                            "$ref": "#/components/schemas/BudgetSubcategory"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "amount",
                    "category",
                    "subcategories"
                ],
                "type": "object"
            },
            "Error": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Investment": {
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "created_at": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "return_rate": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "date",
                    "name",
                    "type",
                    "user_id"
                ],
                "type": "object"
            },
            "InvestmentTransaction": {
                "properties": {
                    "activity_type": {
                        "enum": [
                            "buy",
                            "sell",
                            "deposit",
                            "withdrawal"
                        ],
                        "type": "string"
                    },
                    "asset_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string"
                    },
                    "fee": {
                        "type": "number"
                    },
                    "from_account_id": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "tax": {
                        "type": "number"
                    },
                    "to_account_id": {
                        "type": "integer"
                    },
                    "total_paid": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "unit_price": {
                        "type": "number"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "activity_type",
                    "asset_id",
                    "date",
                    "fee",
                    "from_account_id",
                    "quantity",
                    "tax",
                    "to_account_id",
                    "total_paid",
                    "unit_price",
                    "user_id"
                ],
                "type": "object"
            },
            "RefundGroup": {
                "properties": {
                    "description": {
                        "nullable": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "user_id"
                ],
                "type": "object"
            },
            "RefundItem": {
                "properties": {
                    "amount": {
                        "minimum": 0.0,
                        "type": "number"
                    },
                    "description": {
                        "nullable": true,
                        "type": "string"
                    },
                    "expense_transaction_id": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "income_transaction_id": {
                        "type": "integer"
                    },
                    "refund_group_id": {
                        "nullable": true,
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "expense_transaction_id",
                    "income_transaction_id",
                    "user_id"
                ],
                "type": "object"
            },
            "Transaction": {
                "properties": {
                    "amount": {
                        "minimum": 0.0,
                        "type": "number"
                    },
                    "category": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "date_accountability": {
                        "type": "string"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "from_account_id": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "subcategory": {
                        "nullable": true,
                        "type": "string"
                    },
                    "to_account_id": {
                        "type": "integer"
                    },
                    "type": {
                        "enum": [
                            "expense",
                            "income",
                            "transfer"
                        ],
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "category",
                    "date",
                    "date_accountability",
                    "description",
                    "from_account_id",
                    "to_account_id",
                    "type",
                    "user_id"
                ],
                "type": "object"
            },
            "User": {
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "last_login": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "password": {
                        "minLength": 6,
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "name",
                    "password"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "bearerFormat": "JWT",
                "description": "Enter your JWT token in the format: Bearer <token>",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "contact": {
            "email": "support@wealthmanager.com"
        },
        "description": "API documentation for the WealthManager application",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "title": "WealthManager API",
        "version": "1.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/account_assets/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/AccountAsset"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of account_assets"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all account_assets",
                "tags": [
                    "Account_asset"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAsset"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAsset"
                                }
                            }
                        },
                        "description": "Account_asset created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new account_asset",
                "tags": [
                    "Account_asset"
                ]
            }
        },
        "/account_assets/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a account_asset",
                "tags": [
                    "Account_asset"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAsset"
                                }
                            }
                        },
                        "description": "Return account_asset"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a account_asset by ID",
                "tags": [
                    "Account_asset"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAsset"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAsset"
                                }
                            }
                        },
                        "description": "Account_asset updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a account_asset",
                "tags": [
                    "Account_asset"
                ]
            }
        },
        "/accounts/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all accounts",
                "tags": [
                    "Account"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": "Account created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/accounts/balance_over_time": {
            "get": {
                "parameters": [
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "balance": {
                                                "type": "number"
                                            },
                                            "date": {
                                                "format": "date",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Balance over time data"
                    },
                    "400": {
                        "description": "Invalid date format or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get balance over time for all accounts",
                "tags": [
                    "Account"
                ]
            }
        },
        "/accounts/wealth": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "items": {
                                                "properties": {
                                                    "balance": {
                                                        "type": "number"
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total_wealth": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Wealth data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get total wealth information",
                "tags": [
                    "Account"
                ]
            }
        },
        "/accounts/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a account",
                "tags": [
                    "Account"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": "Return account"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a account by ID",
                "tags": [
                    "Account"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": "Account updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/accounts/{id}/balance": {
            "get": {
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Account balance"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get balance for a specific account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/accounts/{id}/balance_over_time": {
            "get": {
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "balance": {
                                                "type": "number"
                                            },
                                            "date": {
                                                "format": "date",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Balance over time data"
                    },
                    "400": {
                        "description": "Invalid date format or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get balance over time for a specific account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/assets/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Asset"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of assets"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all assets",
                "tags": [
                    "Asset"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        },
                        "description": "Asset created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new asset",
                "tags": [
                    "Asset"
                ]
            }
        },
        "/assets/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a asset",
                "tags": [
                    "Asset"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        },
                        "description": "Return asset"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a asset by ID",
                "tags": [
                    "Asset"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        },
                        "description": "Asset updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a asset",
                "tags": [
                    "Asset"
                ]
            }
        },
        "/banks/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Bank"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of banks"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all banks",
                "tags": [
                    "Bank"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bank"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        },
                        "description": "Bank created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new bank",
                "tags": [
                    "Bank"
                ]
            }
        },
        "/banks/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a bank",
                "tags": [
                    "Bank"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        },
                        "description": "Return bank"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a bank by ID",
                "tags": [
                    "Bank"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bank"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        },
                        "description": "Bank updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a bank",
                "tags": [
                    "Bank"
                ]
            }
        },
        "/budgets/categories": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "expense": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "income": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "transfer": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Categories grouped by type"
                    }
                },
                "summary": "Get all available categories",
                "tags": [
                    "Budget"
                ]
            }
        },
        "/budgets/categories/summary": {
            "get": {
                "parameters": [
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "expense": {
                                            "properties": {
                                                "by_category": {
                                                    "additionalProperties": {
                                                        "properties": {
                                                            "amount": {
                                                                "type": "number"
                                                            },
                                                            "count": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "object"
                                                },
                                                "total": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "income": {
                                            "properties": {
                                                "by_category": {
                                                    "additionalProperties": {
                                                        "properties": {
                                                            "amount": {
                                                                "type": "number"
                                                            },
                                                            "count": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "object"
                                                },
                                                "total": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "transfer": {
                                            "properties": {
                                                "by_category": {
                                                    "additionalProperties": {
                                                        "properties": {
                                                            "amount": {
                                                                "type": "number"
                                                            },
                                                            "count": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "object"
                                                },
                                                "total": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Category summary data"
                    },
                    "400": {
                        "description": "Invalid date format or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get transaction summary by categories",
                "tags": [
                    "Budget"
                ]
            }
        },
        "/budgets/categories/{category_type}": {
            "get": {
                "parameters": [
                    {
                        "description": "Category type",
                        "in": "path",
                        "name": "category_type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "expense",
                                "income",
                                "transfer"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of categories"
                    },
                    "400": {
                        "description": "Invalid category type"
                    }
                },
                "summary": "Get categories for a specific type",
                "tags": [
                    "Budget"
                ]
            }
        },
        "/budgets/summary": {
            "get": {
                "parameters": [
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "expense": {
                                            "type": "number"
                                        },
                                        "income": {
                                            "type": "number"
                                        },
                                        "total": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Budget summary data"
                    },
                    "400": {
                        "description": "Invalid date format or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get budget summary for a date range",
                "tags": [
                    "Budget"
                ]
            }
        },
        "/budgets/summary/period": {
            "get": {
                "parameters": [
                    {
                        "description": "Start date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date in YYYY-MM-DD format",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Time period for grouping",
                        "in": "query",
                        "name": "period",
                        "required": true,
                        "schema": {
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "period": {
                                            "enum": [
                                                "week",
                                                "month",
                                                "quarter",
                                                "year"
                                            ],
                                            "type": "string"
                                        },
                                        "summaries": {
                                            "items": {
                                                "properties": {
                                                    "end_date": {
                                                        "format": "date",
                                                        "type": "string"
                                                    },
                                                    "expense": {
                                                        "properties": {
                                                            "by_category": {
                                                                "additionalProperties": {
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "number"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "total": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "income": {
                                                        "properties": {
                                                            "by_category": {
                                                                "additionalProperties": {
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "number"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "total": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "start_date": {
                                                        "format": "date",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Period-wise budget summary"
                    },
                    "400": {
                        "description": "Invalid parameters or date format"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get budget summary broken down by time periods",
                "tags": [
                    "Budget"
                ]
            }
        },
        "/investments/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/InvestmentTransaction"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of investments"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all investments",
                "tags": [
                    "Investment"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvestmentTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvestmentTransaction"
                                }
                            }
                        },
                        "description": "Investment created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new investment",
                "tags": [
                    "Investment"
                ]
            }
        },
        "/investments/assets/{symbol}/transactions": {
            "get": {
                "parameters": [
                    {
                        "description": "Asset symbol (e.g., AAPL, GOOGL)",
                        "in": "path",
                        "name": "symbol",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "date": {
                                                "format": "date",
                                                "type": "string"
                                            },
                                            "fees": {
                                                "type": "number"
                                            },
                                            "id": {
                                                "type": "integer"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "shares": {
                                                "type": "number"
                                            },
                                            "total": {
                                                "type": "number"
                                            },
                                            "type": {
                                                "enum": [
                                                    "buy",
                                                    "sell"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Asset transactions"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get transactions for a specific investment asset",
                "tags": [
                    "Investment"
                ]
            }
        },
        "/investments/portfolio/performance": {
            "get": {
                "parameters": [
                    {
                        "description": "Time period for performance data",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "schema": {
                            "default": "1Y",
                            "enum": [
                                "1D",
                                "1W",
                                "1M",
                                "3M",
                                "6M",
                                "1Y",
                                "3Y",
                                "5Y",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data_points": {
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "format": "date",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "end_value": {
                                            "type": "number"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "start_value": {
                                            "type": "number"
                                        },
                                        "total_return": {
                                            "type": "number"
                                        },
                                        "total_return_percentage": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Portfolio performance data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get investment portfolio performance over time",
                "tags": [
                    "Investment"
                ]
            }
        },
        "/investments/portfolio/summary": {
            "get": {
                "parameters": [
                    {
                        "description": "Optional account ID to filter portfolio summary",
                        "in": "query",
                        "name": "account_id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assets": {
                                            "items": {
                                                "properties": {
                                                    "cost_basis": {
                                                        "type": "number"
                                                    },
                                                    "current_price": {
                                                        "type": "number"
                                                    },
                                                    "current_value": {
                                                        "type": "number"
                                                    },
                                                    "gain_loss": {
                                                        "type": "number"
                                                    },
                                                    "gain_loss_percentage": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "shares": {
                                                        "type": "number"
                                                    },
                                                    "symbol": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total_cost": {
                                            "type": "number"
                                        },
                                        "total_gain_loss": {
                                            "type": "number"
                                        },
                                        "total_gain_loss_percentage": {
                                            "type": "number"
                                        },
                                        "total_value": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Portfolio summary data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get investment portfolio summary",
                "tags": [
                    "Investment"
                ]
            }
        },
        "/investments/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a investment",
                "tags": [
                    "Investment"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvestmentTransaction"
                                }
                            }
                        },
                        "description": "Return investment"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a investment by ID",
                "tags": [
                    "Investment"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvestmentTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvestmentTransaction"
                                }
                            }
                        },
                        "description": "Investment updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a investment",
                "tags": [
                    "Investment"
                ]
            }
        },
        "/refund_groups/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/RefundGroup"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of refund_groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all refund_groups",
                "tags": [
                    "Refund_group"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundGroup"
                                }
                            }
                        },
                        "description": "Refund_group created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new refund_group",
                "tags": [
                    "Refund_group"
                ]
            }
        },
        "/refund_groups/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a refund_group",
                "tags": [
                    "Refund_group"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundGroup"
                                }
                            }
                        },
                        "description": "Return refund_group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a refund_group by ID",
                "tags": [
                    "Refund_group"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundGroup"
                                }
                            }
                        },
                        "description": "Refund_group updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a refund_group",
                "tags": [
                    "Refund_group"
                ]
            }
        },
        "/refund_items/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/RefundItem"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of refund_items"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all refund_items",
                "tags": [
                    "Refund_item"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundItem"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundItem"
                                }
                            }
                        },
                        "description": "Refund_item created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new refund_item",
                "tags": [
                    "Refund_item"
                ]
            }
        },
        "/refund_items/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a refund_item",
                "tags": [
                    "Refund_item"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundItem"
                                }
                            }
                        },
                        "description": "Return refund_item"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a refund_item by ID",
                "tags": [
                    "Refund_item"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundItem"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundItem"
                                }
                            }
                        },
                        "description": "Refund_item updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a refund_item",
                "tags": [
                    "Refund_item"
                ]
            }
        },
        "/transactions/": {
            "get": {
                "parameters": [
                    {
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Items per page",
                        "in": "query",
                        "name": "per_page",
                        "schema": {
                            "default": 10,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Field to sort by",
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sort order (asc or desc)",
                        "in": "query",
                        "name": "sort_order",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to return",
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search query",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            },
                                            "type": "array"
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "pages": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "List of transactions"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all transactions",
                "tags": [
                    "Transaction"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transaction"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": "Transaction created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a new transaction",
                "tags": [
                    "Transaction"
                ]
            }
        },
        "/transactions/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a transaction",
                "tags": [
                    "Transaction"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": "Return transaction"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a transaction by ID",
                "tags": [
                    "Transaction"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": "Transaction updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a transaction",
                "tags": [
                    "Transaction"
                ]
            }
        },
        "/users/login": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "format": "email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "format": "password",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "refresh_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "summary": "Login user and get access token",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/refresh": {
            "post": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Token refreshed successfully"
                    },
                    "401": {
                        "description": "Invalid refresh token"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Refresh access token",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/register": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "format": "email",
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "format": "password",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid input or missing fields"
                    },
                    "422": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "summary": "Register a new user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/verify-token": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Token is valid"
                    },
                    "401": {
                        "description": "Invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Verify JWT token",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{user_id}": {
            "delete": {
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete user",
                "tags": [
                    "Users"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "User details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get user by ID",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "format": "email",
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "format": "password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update user",
                "tags": [
                    "Users"
                ]
            }
        }
    },
    "servers": [
        {
            "description": "Development server",
            "url": "https://wealthmanager.myfunnycluster.dynamic-dns.net"
        }
    ]
}
